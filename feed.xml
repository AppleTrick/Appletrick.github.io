<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://appletrick.github.io/</id><title>박창희's TIL</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-08-01T17:55:31+09:00</updated> <author> <name>Changhee Park</name> <uri>https://appletrick.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://appletrick.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://appletrick.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Changhee Park </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>redux immutable 문제 해결하기 (createAction, createReducer)</title><link href="https://appletrick.github.io/posts/reduxCreateActionCreateReducer%EB%AC%B8%EC%A0%9C/" rel="alternate" type="text/html" title="redux immutable 문제 해결하기 (createAction, createReducer)" /><published>2022-08-01T00:00:00+09:00</published> <updated>2022-08-01T00:00:00+09:00</updated> <id>https://appletrick.github.io/posts/reduxCreateActionCreateReducer%EB%AC%B8%EC%A0%9C/</id> <content src="https://appletrick.github.io/posts/reduxCreateActionCreateReducer%EB%AC%B8%EC%A0%9C/" /> <author> <name>{"name"=>"Changhee Park", "link"=>"https://github.com/Appletrick"}</name> </author> <category term="TS" /> <category term="React" /> <category term="Redux" /> <summary> redux immutable 문제 해결하기 redux 사용하다 보니 문제가 생겼다. const initialState: ScheduleData = { Expedition: { Weekly: { ChallengeAbyss: { IsDone: false, Visible: true, }, EffonaReward: { IsDone: false, Visible: true, }, CrackPieceReward: { IsDone: false, Visible: true, }, ChallengeGuardian: { IsDone: f... </summary> </entry> <entry><title>as Const?</title><link href="https://appletrick.github.io/posts/asConst/" rel="alternate" type="text/html" title="as Const?" /><published>2022-07-14T00:00:00+09:00</published> <updated>2022-07-14T00:00:00+09:00</updated> <id>https://appletrick.github.io/posts/asConst/</id> <content src="https://appletrick.github.io/posts/asConst/" /> <author> <name>{"name"=>"Changhee Park", "link"=>"https://github.com/Appletrick"}</name> </author> <category term="TS" /> <summary> 궁금증의 동기! 타입스크립트 사용해서 프로젝트 하던중 아래와 같은 예제 코드를 발견 했다. const INCREASE = "counter/INCREASE" as const; as const 가 어떤 역할을 하는지 좀 처럼 감을 못잡았다. 바로 구글링 let 변수에서 let hihi = "abc"; hihi = "bbbb"; // hihi 는 string 타입임으로 정상적으로 변환이 된다 let hello = "world" as const; hello = "hihi"; // hello 의 타입은 'world; 임으로 변환 못함 as const 의 역할은 그 자체를 하나의 타입으로 바꿔준다는 것을 알수 있다. 객체에서 const thisObj = { hello: "world" as ... </summary> </entry> <entry><title>JS에서의 기초 Redux 사용 방법과 구조</title><link href="https://appletrick.github.io/posts/Redux%EA%B8%B0%EC%B4%88%EC%82%AC%EC%9A%A9%EB%B2%95/" rel="alternate" type="text/html" title="JS에서의 기초 Redux 사용 방법과 구조" /><published>2022-06-18T01:00:00+09:00</published> <updated>2022-06-18T19:08:23+09:00</updated> <id>https://appletrick.github.io/posts/Redux%EA%B8%B0%EC%B4%88%EC%82%AC%EC%9A%A9%EB%B2%95/</id> <content src="https://appletrick.github.io/posts/Redux%EA%B8%B0%EC%B4%88%EC%82%AC%EC%9A%A9%EB%B2%95/" /> <author> <name>{"name"=>"Changhee Park", "link"=>"https://github.com/Appletrick"}</name> </author> <category term="Redux" /> <summary> 기초부터 JS에서의 리덕스를 알아보자 첫째로 리덕스의 문법이 바뀐건 아니지만 vscode에서도 바꾸길 권장하기에 redux_toolkit을 이용해서 바꾸려고 한다. 리덕스는 아래와 같은 함수의 구조로 이루어 진다. import { configureStore } from "@reduxjs/toolkit"; const store = configureStore({ reducer: -function- }); function 에는 reducer에는 함수를 인자로 넣어 어떤 동작에 대해 어떻게 행동하는지에 대한 정의를 내려주는 함수를 정의 해준다. const reducer = (-initialState-, -action-) =&amp;gt; { switch (action.type) { c... </summary> </entry> <entry><title>2022.06.18 근황 정리</title><link href="https://appletrick.github.io/posts/%EA%B7%BC%ED%99%A9%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="2022.06.18 근황 정리" /><published>2022-06-18T00:00:00+09:00</published> <updated>2022-06-18T00:00:00+09:00</updated> <id>https://appletrick.github.io/posts/%EA%B7%BC%ED%99%A9%EC%A0%95%EB%A6%AC/</id> <content src="https://appletrick.github.io/posts/%EA%B7%BC%ED%99%A9%EC%A0%95%EB%A6%AC/" /> <author> <name>{"name"=>"Changhee Park", "link"=>"https://github.com/Appletrick"}</name> </author> <category term="일기" /> <summary> 블로그 안 쓰는 동안 했던일 redux 공부 react typescript 공부 로아플 프로젝트 준비 취업준비. 앞으로 해야될일 취업 redux 공부 내용 정리 로아플 프로젝트 완성하기 </summary> </entry> <entry><title>interface에관하여</title><link href="https://appletrick.github.io/posts/interface%EC%97%90%EA%B4%80%ED%95%98%EC%97%AC/" rel="alternate" type="text/html" title="interface에관하여" /><published>2022-06-03T00:00:00+09:00</published> <updated>2022-06-03T00:00:00+09:00</updated> <id>https://appletrick.github.io/posts/interface%EC%97%90%EA%B4%80%ED%95%98%EC%97%AC/</id> <content src="https://appletrick.github.io/posts/interface%EC%97%90%EA%B4%80%ED%95%98%EC%97%AC/" /> <author> <name>{"name"=>"Changhee Park", "link"=>"https://github.com/Appletrick"}</name> </author> <category term="TS" /> <summary> interface는 type과 유사하다. 똑같이 해당 구조를 사전에 설정해 주는 역할을 한다. interface와 type type에서의 코드 type NickName1 = string; type HealthBar1 = number; type Hamberg = Array&amp;lt;string&amp;gt;; type Team = "red" | "blue" | "yellow"; // 1️⃣ 타입에서 특정 값만을 가지게 할 수 있음 type Player3 = { nickname: NickName1; healthBar: HealthBar1; team: Team; }; const LeeP: Player3 = { nickname: "LeeP", healthBar: 12, team: "red"... </summary> </entry> </feed>
